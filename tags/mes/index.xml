<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>mes on 小帅的技术小黑屋</title>
    <link>https://xxsvip.github.io/tags/mes/</link>
    <description>Recent content in mes on 小帅的技术小黑屋</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 24 Apr 2020 08:04:47 +0800</lastBuildDate>
    
	<atom:link href="https://xxsvip.github.io/tags/mes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>MES认识</title>
      <link>https://xxsvip.github.io/jonhon/mes%E8%AE%A4%E8%AF%86/</link>
      <pubDate>Fri, 24 Apr 2020 08:04:47 +0800</pubDate>
      
      <guid>https://xxsvip.github.io/jonhon/mes%E8%AE%A4%E8%AF%86/</guid>
      <description>战略层关注高阶数据（如完成率、变化趋势等）
中层管理关注更多的是实时数据（如计划进度、生产问题）
车间执行层更多关注的是相对静态的数据（装配BOM、工艺数据）
MES = 管理思想 + IT工具
利用IT手段的核心目的是在管理思想确定的情况下如何提高数据传输效率、降低工人强度与增强数据的可追溯性。比如由系统集成代替手工录入。
目前大厂商由于其自身成本压力会以产品化的思想，以产品灵活配置尽可能降低实施成本，再加上很多项目经验累积出一套可行的实施方法论，在实施过程中尽量避免各种耽搁时间的“坑”以降低成本。而小厂商的实施效果不好评价，只是大厂商遇到的成本问题，在小厂商只是缓解而不会根除。
所以如果长远来看，反而觉得围绕解决核心业务痛点的小系统（微服务）是个趋势。比如排产问题，产品类型、客户登记、订单交付时间等多维数据处理，如果仅仅依靠“人工智能”人为处理，工作强度大而且容易出错，但如果利用APS这种小工具则会大大减轻工作量。通此类比，可以将MES拆分为许多为车间执行层提供的小工具，如报表工具、质量检验工具等，各类小工具串联起来就会形成管理执行系统的MES系统。
正所谓专业的人做专业的事，这些小系统的发展因为需求范围比较窄，很容易做的精益求精，对提升效率、降低工作强度帮助巨大。由于MES本身需求难以界定，有些项目甚至将工艺、物流、成本核算等一系列需求添加到MES范围，造成同等成本下MES只能以串联为目的，而减轻了对各个模块对打磨，造成现场工人为了完成任务而使用MES。
综上，MES是接收ERP的生产计划，最后以产品交付结尾，中间穿插计划员、调度、车间工艺、检验员、操作工人等角色，业务穿插的过程中有许多核心业务。MES最佳的方式是由单点业务的提升，由单点到整个线条的串联。重点解决单点的效率问题，最终很自然的拓展到全部业务链。直接在整体上打破现有模式的MES实施模式是有高风险的。但是MES在上线过程中有许多企业的要求在里边，所以类似于这种单点业务串联成MES的实施方案更适合于没有政治要求的项目。</description>
    </item>
    
  </channel>
</rss>